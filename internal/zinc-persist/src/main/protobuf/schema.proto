syntax = "proto3";

package sbt.internal.inc;

///////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////// ANALYSIS API ////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

message Hash {
    string hash = 1;
}

message LastModified {
    int64 millis = 1;
}

message Stamps {
    message StampType {
        oneof type {
            Hash hash = 1;
            LastModified lastModified = 2;
        }
    }

    map<string, StampType> productStamps = 1;
    map<string, StampType> binaryStamps = 2;
    map<string, StampType> sourceStamps = 3;
}

message OutputGroup {
    string source = 1;
    string target = 2;
}

message MultipleOutput {
    repeated OutputGroup outputGroups = 1;
}

message SingleOutput {
    string target = 1;
}

message Compilation {
    int64 startTime = 1;
    oneof Output {
        SingleOutput singleOutput = 2;
        MultipleOutput multipleOutput = 3;
    }
}

message Compilations {
    repeated Compilation compilations = 1;
}

enum Severity {
    INFO = 0;
    WARN = 1;
    ERROR = 2;
}

message Position {
    int32 line = 1;
    int32 offset = 2;
    string lineContent = 3;
    int32 pointer = 4;
    string pointerSpace = 5;
    string sourcePath = 6;
    string sourceFilepath = 7;
}

message Problem {
    string category = 1;
    Severity severity = 2;
    string message = 3;
    Position position = 4;
}

message SourceInfo {
    repeated Problem reportedProblems = 1;
    repeated Problem unreportedProblems = 2;
    repeated string mainClasses = 3;
}

message FileHash {
    string path = 1;
    int32 hash = 2;
}

enum CompileOrder {
    MIXED = 0;
    JAVATHENSCALA = 1;
    SCALATHENJAVA = 2;
}

message Tuple {
    string first = 1;
    string second = 2;
}

message MiniOptions {
    repeated FileHash classpathHash = 1;
    repeated string scalacOptions = 2;
    repeated string javacOptions = 3;
}

message MiniSetup {
    oneof Output {
        SingleOutput singleOutput = 1;
        MultipleOutput multipleOutput = 2;
    }
    MiniOptions miniOptions = 3;
    string compilerVersion = 4;
    CompileOrder compileOrder = 5;
    bool storeApis = 6;
    repeated Tuple extra = 7;
}

///////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////// BRIDGE API ////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////

enum DefinitionType {
    TRAIT = 0;
    CLASSDEF = 1;
    MODULE = 2;
    PACKAGEMODULE = 3;
}

message This {}

message Id {
    string id = 1;
}


message Super {
    message PartialPath {
        oneof path {
            Id id = 1;
            This this = 2;
        }
    }

    PartialPath qualifier = 3;
}

message Path {
    message PathComponent {
        oneof Component {
            Id id = 1;
            This this = 2;
            Super super = 3;
        }
    }

    repeated PathComponent components = 1;
}

message AnnotationArgument {
    string name = 1;
    string value = 2;
}

enum Variance {
    Invariant = 0;
    Contravariant = 1;
    Covariant = 2;
}

message ThisQualifier {}

message Unqualified {}

message IdQualifier {
    string value = 1;
}

message Qualifier {
    oneof Type {
        ThisQualifier thisQualifier = 1;
        IdQualifier idQualifier = 2;
        Unqualified unqualified = 3;
    }
}

message Public {}

message Private {
    Qualifier qualifier = 1;
}

message Protected {
    Qualifier qualifier = 1;
}

message Qualified {
    Qualifier qualifier = 1;
}

message Access {
    oneof Type {
        Public public = 1;
        Protected protected = 2;
        Private private = 3;
        // Can we remove this one?
        Qualifier qualifier = 4;
    }
}

message Modifiers {
    sfixed32 flags = 1;
}

message Type {
    message Projection {
        string id = 1;
        Type prefix = 2;
    }

    message ParameterRef {
        string id = 1;
    }

    message Polymorphic {
        Type baseType = 1;
        repeated TypeParameter typeParameter = 2;
    }

    message Parameterized {
        Type baseType = 1;
        repeated Type typeArguments = 2;
    }

    message Existential {
        Type baseType = 1;
        repeated TypeParameter clause = 2;
    }

    message EmptyType {}

    message Constant {
        Type baseType = 1;
        string value = 2;
    }

    message Annotated {
        Type baseType = 1;
        repeated Annotation annotations = 2;
    }

    message Structure {
        Type parents = 1;
        ClassDefinition declared = 2;
        ClassDefinition inherited = 3;
    }

    message Singleton {
        Path path = 1;
    }
}

message Annotation {
    Type base = 1;
    repeated AnnotationArgument arguments = 2;
}

message TypeParameter {
    string id = 1;
    repeated Annotation annotation = 2;
    repeated TypeParameter typeParameters = 3;
    Variance variance = 4;
    Type lowerBound = 5;
    Type upperBound = 6;
}

message ClassDefinition {
    string name = 1;
    Access access = 2;
    Modifiers modifiers = 3;
    repeated Annotation annotations = 4;
}


